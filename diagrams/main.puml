@startuml
class "std::vector<Ship *>" as C_0007462257846685508834
class C_0007462257846685508834 {
__
}
class "Ship" as C_0014529657433315016423
class C_0014529657433315016423 {
+Ship(size_t len, size_t index) : void
+Ship(const Ship & other) : void
+Ship(Ship && other) = deleted : void
+~Ship() : void
..
+operator=(const Ship & other) : Ship &
+operator=(Ship && other) = deleted : Ship &
..
+getHealth() const : int
+getLenght() const : size_t
+getSegment(size_t index) const : Segment
+getShipIndex() const : size_t
+isAlive() const : bool
+takeDamage(size_t segment_index, int damage) : int
__
-health : int
-is_alive : bool
-length : size_t
-segments : Segment *
-ship_index : size_t
}
enum "Ship::SegmentState" as C_0016593760204207859148
enum C_0016593760204207859148 {
ALIVE
DAMAGED
DESTROYED
}
class "Ship::Segment" as C_0000674658759292391449
class C_0000674658759292391449 {
__
+hp : int
+state : SegmentState
}
enum "Ship::Orientation" as C_0015200704647938469073
enum C_0015200704647938469073 {
HORIZONTAL
VERTICAL
}
class "ShipField" as C_0003843296779074973901
class C_0003843296779074973901 {
+ShipField(int width, int height) : void
+ShipField(const ShipField & other) : void
+ShipField(ShipField && other) noexcept : void
+~ShipField() : void
..
+operator=(const ShipField & other) : ShipField &
+operator=(ShipField && other) noexcept : ShipField &
..
+attackShip(int x, int y) : bool
+clearField() : void
+getCellVisibilityState(int x, int y) const : CellVisibilityState
+getHeight() const : size_t
+getIsShip(int x, int y) const : bool
+getShipIndex(int x, int y) const : size_t
+getShipSegmentHP(int x, int y) const : int
+getShipSegmentIndex(int x, int y) const : size_t
+getShipSegmentState(int x, int y) const : Ship::SegmentState
+getWidth() const : size_t
+placeShip(Ship * ship, int x, int y, Ship::Orientation orientation) : bool
__
-field : FieldElement **
-height : size_t
-width : size_t
}
enum "ShipField::CellVisibilityState" as C_0014337503322603405869
enum C_0014337503322603405869 {
UNKNOWN
BLANK
SHIP
}
class "ShipField::FieldElement" as C_0000316359785794417378
class C_0000316359785794417378 {
__
+is_ship : bool
+ship : Ship *
+ship_index : size_t
+ship_segment_index : size_t
+state : CellVisibilityState
}
class "ShipManager" as C_0017499122254539489506
class C_0017499122254539489506 {
+ShipManager() : void
+ShipManager(size_t count, size_t * lengths) : void
+~ShipManager() : void
..
+getAliveCount() : size_t
+getShip(int index) : Ship *
+getShipCount() : size_t
__
-ships : std::vector<Ship *>
-ships_count : size_t
}
C_0007462257846685508834 ..> C_0014529657433315016423
C_0014529657433315016423 --> C_0000674658759292391449 : -segments
C_0016593760204207859148 --+ C_0014529657433315016423
C_0000674658759292391449 --+ C_0014529657433315016423
C_0000674658759292391449 o-- C_0016593760204207859148 : +state
C_0015200704647938469073 --+ C_0014529657433315016423
C_0003843296779074973901 ..> C_0014337503322603405869
C_0003843296779074973901 ..> C_0016593760204207859148
C_0003843296779074973901 ..> C_0014529657433315016423
C_0003843296779074973901 ..> C_0015200704647938469073
C_0003843296779074973901 --> C_0000316359785794417378 : -field
C_0014337503322603405869 --+ C_0003843296779074973901
C_0000316359785794417378 --+ C_0003843296779074973901
C_0000316359785794417378 o-- C_0014337503322603405869 : +state
C_0000316359785794417378 --> C_0014529657433315016423 : +ship
C_0017499122254539489506 ..> C_0014529657433315016423
C_0017499122254539489506 o-- C_0007462257846685508834 : -ships

'Generated with clang-uml, version 0.5.5
'LLVM version clang version 18.1.8
@enduml
