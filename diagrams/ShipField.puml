@startuml
class "std::vector<Ship>" as C_0010668212532447068380
class C_0010668212532447068380 {
__
}
class "std::pair<int,int>" as C_0006524010458157121833
class C_0006524010458157121833 {
__
}
class "std::basic_istream<char>" as C_0005505409806480479128
class C_0005505409806480479128 {
__
}
class "std::string" as C_0001275076681856179721
class C_0001275076681856179721 {
__
}
enum "ShipSegmentState" as C_0014256742677139282670
enum C_0014256742677139282670 {
INTACT
DAMAGED
DESTROYED
}
enum "ShipOrientation" as C_0002579181642537833876
enum C_0002579181642537833876 {
HORIZONTAL
VERTICAL
}
enum "CellVisibilityState" as C_0003333043679234439357
enum C_0003333043679234439357 {
UNKNOWN
BLANK
SHIP
}
enum "Stage" as C_0001935036015363084261
enum C_0001935036015363084261 {
NOT_STARTED
CREATING_FIELD
CREATING_SHIPS
PLACING_SHIPS
PLAYER_TURN
AI_TURN
GAME_OVER
EXIT
}
class "Ship" as C_0014529657433315016423
class C_0014529657433315016423 {
+Ship(int length) : void
+Ship(const Ship & other) : void
+Ship(Ship && other) noexcept : void
+~Ship() : void
..
+operator=(const Ship & other) : Ship &
+operator=(Ship && other) noexcept : Ship &
..
+operator!=(const Ship & other) const : bool
+operator==(const Ship & other) const : bool
..
+getLength() const : size_t
+getSegmentHP(size_t index) const : int
+getSegmentState(size_t index) const : ShipSegmentState
+isAlive() const : bool
+takeDamage(size_t segment_index, int damage) : void
__
-health : size_t
-length : size_t
-segments : Segment *
}
class "Ship::Segment" as C_0000674658759292391449
class C_0000674658759292391449 {
__
+hp : int
+state : ShipSegmentState
}
class "ShipManager" as C_0017499122254539489506
class C_0017499122254539489506 {
+ShipManager() : void
+ShipManager(size_t count, size_t * lengths) : void
+~ShipManager() constexpr = default : void
..
+operator!=(const ShipManager & other) const : bool
+operator==(const ShipManager & other) const : bool
..
+getAliveCount() const : size_t
+getShip(size_t index) : Ship &
+getShip(size_t index) const : const Ship &
+getShipCount() const : size_t
+getShipLength(size_t index) const : size_t
__
-ships : std::vector<Ship>
-ships_count : size_t
}
class "ShipField" as C_0003843296779074973901
class C_0003843296779074973901 {
+ShipField() : void
+ShipField(int width, int height) : void
+ShipField(const ShipField & other) : void
+ShipField(ShipField && other) noexcept : void
+~ShipField() : void
..
+operator=(const ShipField & other) : ShipField &
+operator=(ShipField && other) noexcept : ShipField &
..
+operator!=(const ShipField & other) const : bool
+operator==(const ShipField & other) const : bool
..
+attackShip(int x, int y, bool expose_cell = true, int damage = 1) : bool
+checkShipCollision(int ship_length, int x, int y, ShipOrientation orientation) const : bool
+clearField() : void
-exposeSurroundingShipCells(int ship_length, int x, int y) : void
+getCellVisibilityState(int x, int y) const : CellVisibilityState
+getHeight() const : size_t
+getIsShip(int x, int y) const : bool
+getShipHead(int x, int y) const : std::pair<int,int>
+getShipOrientation(int x, int y) const : ShipOrientation
+getShipSegmentState(int x, int y) const : ShipSegmentState
+getWidth() const : size_t
+placeShip(Ship & ship, int x, int y, ShipOrientation orientation) : void
+restoreShips(std::istream & is, ShipManager & manager) : void
__
-field : FieldElement **
-height : size_t
-width : size_t
}
class "ShipField::FieldElement" as C_0000316359785794417378
class C_0000316359785794417378 {
__
+ship : Ship *
+ship_segment_index : size_t
+state : CellVisibilityState
}
class "exceptions::GameException" as C_0007589199267016446353
class C_0007589199267016446353 {
+GameException(const std::string & message) : void
..
+what() const noexcept : const char *
__
-msg : std::string
}
class "exceptions::NoAbilityAvailableException" as C_0006087931829388500955
class C_0006087931829388500955 {
+NoAbilityAvailableException() : void
+NoAbilityAvailableException(const std::string & message) : void
__
}
class "exceptions::ShipPlacementConflictException" as C_0014145847858458416793
class C_0014145847858458416793 {
+ShipPlacementConflictException() : void
+ShipPlacementConflictException(const std::string & message) : void
__
}
class "exceptions::OutOfBoundsAttackException" as C_0000456049838779900119
class C_0000456049838779900119 {
+OutOfBoundsAttackException() : void
+OutOfBoundsAttackException(const std::string & message) : void
__
}
C_0010668212532447068380 ..> C_0014529657433315016423
C_0014529657433315016423 ..> C_0014256742677139282670
C_0014529657433315016423 --> C_0000674658759292391449 : -segments
C_0000674658759292391449 --+ C_0014529657433315016423
C_0000674658759292391449 o-- C_0014256742677139282670 : +state
C_0017499122254539489506 ..> C_0014529657433315016423
C_0017499122254539489506 o-- C_0010668212532447068380 : -ships
C_0003843296779074973901 ..> C_0002579181642537833876
C_0003843296779074973901 ..> C_0003333043679234439357
C_0003843296779074973901 ..> C_0014256742677139282670
C_0003843296779074973901 ..> C_0014529657433315016423
C_0003843296779074973901 ..> C_0006524010458157121833
C_0003843296779074973901 ..> C_0005505409806480479128
C_0003843296779074973901 ..> C_0017499122254539489506
C_0003843296779074973901 --> C_0000316359785794417378 : -field
C_0000316359785794417378 --+ C_0003843296779074973901
C_0000316359785794417378 o-- C_0003333043679234439357 : +state
C_0000316359785794417378 --> C_0014529657433315016423 : +ship
C_0007589199267016446353 o-- C_0001275076681856179721 : -msg
C_0006087931829388500955 ..> C_0001275076681856179721
C_0007589199267016446353 <|-- C_0006087931829388500955

C_0014145847858458416793 ..> C_0001275076681856179721
C_0007589199267016446353 <|-- C_0014145847858458416793

C_0000456049838779900119 ..> C_0001275076681856179721
C_0007589199267016446353 <|-- C_0000456049838779900119


'Generated with clang-uml, version 0.5.5
'LLVM version clang version 18.1.8
@enduml
