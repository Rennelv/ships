@startuml
class "sf::Vector2<float>" as C_0009693095778494330448
class C_0009693095778494330448 {
__
}
class "std::vector<Ship>" as C_0010668212532447068380
class C_0010668212532447068380 {
__
}
class "std::pair<int,int>" as C_0006524010458157121833
class C_0006524010458157121833 {
__
}
class "std::basic_istream<char>" as C_0005505409806480479128
class C_0005505409806480479128 {
__
}
class "std::shared_ptr<Ability>" as C_0012342435662910727844
class C_0012342435662910727844 {
__
}
class "std::queue<std::shared_ptr<Ability>>" as C_0008193623610420284737
class C_0008193623610420284737 {
__
}
class "std::function<std::shared_ptr<Ability>()>" as C_0014703876471129105020
class C_0014703876471129105020 {
__
}
class "std::vector<std::function<std::shared_ptr<Ability>()>>" as C_0010378818160678026980
class C_0010378818160678026980 {
__
}
class "std::vector<sf::Text>" as C_0015054090575003110977
class C_0015054090575003110977 {
__
}
class "std::unique_ptr<State>" as C_0003593355595461115184
class C_0003593355595461115184 {
__
}
class "std::string" as C_0001275076681856179721
class C_0001275076681856179721 {
__
}
enum "ShipSegmentState" as C_0014256742677139282670
enum C_0014256742677139282670 {
INTACT
DAMAGED
DESTROYED
}
enum "ShipOrientation" as C_0002579181642537833876
enum C_0002579181642537833876 {
HORIZONTAL
VERTICAL
}
enum "CellVisibilityState" as C_0003333043679234439357
enum C_0003333043679234439357 {
UNKNOWN
BLANK
SHIP
}
class "Ship" as C_0014529657433315016423
class C_0014529657433315016423 {
+Ship(int length) : void
+Ship(const Ship & other) : void
+Ship(Ship && other) noexcept : void
+~Ship() : void
..
+operator=(const Ship & other) : Ship &
+operator=(Ship && other) noexcept : Ship &
..
+operator!=(const Ship & other) const : bool
+operator==(const Ship & other) const : bool
..
+getLength() const : size_t
+getSegmentHP(size_t index) const : int
+getSegmentState(size_t index) const : ShipSegmentState
+isAlive() const : bool
+takeDamage(size_t segment_index, int damage) : void
__
-health : size_t
-length : size_t
-segments : Segment *
}
class "Ship::Segment" as C_0000674658759292391449
class C_0000674658759292391449 {
__
+hp : int
+state : ShipSegmentState
}
class "ShipManager" as C_0017499122254539489506
class C_0017499122254539489506 {
+ShipManager() : void
+ShipManager(size_t count, size_t * lengths) : void
+~ShipManager() constexpr = default : void
..
+operator!=(const ShipManager & other) const : bool
+operator==(const ShipManager & other) const : bool
..
+getAliveCount() const : size_t
+getShip(size_t index) : Ship &
+getShip(size_t index) const : const Ship &
+getShipCount() const : size_t
+getShipLength(size_t index) const : size_t
__
-ships : std::vector<Ship>
-ships_count : size_t
}
class "ShipField" as C_0003843296779074973901
class C_0003843296779074973901 {
+ShipField() : void
+ShipField(int width, int height) : void
+ShipField(const ShipField & other) : void
+ShipField(ShipField && other) noexcept : void
+~ShipField() : void
..
+operator=(const ShipField & other) : ShipField &
+operator=(ShipField && other) noexcept : ShipField &
..
+operator!=(const ShipField & other) const : bool
+operator==(const ShipField & other) const : bool
..
+attackShip(int x, int y, bool expose_cell = true, int damage = 1) : bool
+checkShipCollision(int ship_length, int x, int y, ShipOrientation orientation) const : bool
+clearField() : void
-exposeSurroundingShipCells(int ship_length, int x, int y) : void
+getCellVisibilityState(int x, int y) const : CellVisibilityState
+getHeight() const : size_t
+getIsShip(int x, int y) const : bool
+getShipHead(int x, int y) const : std::pair<int,int>
+getShipOrientation(int x, int y) const : ShipOrientation
+getShipSegmentState(int x, int y) const : ShipSegmentState
+getWidth() const : size_t
+placeShip(Ship & ship, int x, int y, ShipOrientation orientation) : void
+restoreShips(std::istream & is, ShipManager & manager) : void
__
-field : FieldElement **
-height : size_t
-width : size_t
}
class "ShipField::FieldElement" as C_0000316359785794417378
class C_0000316359785794417378 {
__
+ship : Ship *
+ship_segment_index : size_t
+state : CellVisibilityState
}
class "AbilityResults" as C_0005219465313958275113
class C_0005219465313958275113 {
__
+BombardDamageDealt : bool
+DoubleDamageIsActive : bool
+ScannerShipFound : bool
}
class "AbilityInput" as C_0006255146489372148425
class C_0006255146489372148425 {
__
+target_field : ShipField &
+target_manager : ShipManager &
+x : int
+y : int
}
enum "AbilityType" as C_0006740456236575953687
enum C_0006740456236575953687 {
DoubleDamage
Scanner
Bombard
}
abstract "Ability" as C_0017635961848386255115
abstract C_0017635961848386255115 {
+~Ability() constexpr = default : void
..
{abstract} +getType() const = 0 : AbilityType
{abstract} +use(AbilityInput & input, AbilityResults & ret) = 0 : void
__
}
class "AbilityManager" as C_0002235219345516323367
class C_0002235219345516323367 {
+AbilityManager() : void
..
+addRandomAbility() : void
+getPendingAbilityType() const : AbilityType
-getRandomAbility() : std::shared_ptr<Ability>
+useAbility(AbilityInput input, AbilityResults & ability_results) : void
__
-abilities : std::queue<std::shared_ptr<Ability>>
-ability_factory : const std::vector<std::function<std::shared_ptr<Ability> ()>>
}
class "Player" as C_0003605716991605700936
class C_0003605716991605700936 {
+Player() : void
..
+attack(Player & target_player, int x, int y, int damage, bool expose_cell = true) : void
+createField(int width, int height) : void
+createShipManager(size_t count, size_t * lengths) : void
+getAbilityResults() : AbilityResults
+getAliveCount() const : size_t
+getField() const : const ShipField &
+getPendingAbilityType() const : AbilityType
+getShipCount() const : size_t
+getShipLength(size_t index) const : size_t
+placeShip(Ship & ship, int x, int y, ShipOrientation orientation) : void
+placeShipByIndex(int index, int x, int y, ShipOrientation orientation) : void
+useAbility(Player & target_player, int x, int y) : void
__
-ability_manager : AbilityManager
-ability_results : AbilityResults
-field : ShipField
+scanner_is_active : bool
-ship_manager : ShipManager
}
class "AiPlayer" as C_0005644868336032600742
class C_0005644868336032600742 {
+AiPlayer(Player & player) : void
..
+attackRandom(Player & targetPlayer) : void
+createField(int width, int height) : void
+createShipManager(size_t count, size_t * lengths) : void
+getPlayer() : Player &
+placeShipsRandom() : void
+reset() : void
__
-controlled_player : Player &
}
enum "GameState" as C_0004356735495323104445
enum C_0004356735495323104445 {
Menu
CreateField
CreateShips
PlacingShips
AttackingShips
SaveLoadState
Exit
}
abstract "State" as C_0001914138303902600425
abstract C_0001914138303902600425 {
+~State() constexpr = default : void
..
{abstract} +changeState() = 0 : GameState
{abstract} +handleInput(sf::Event & event) = 0 : void
{abstract} +render(sf::RenderWindow & window) = 0 : void
{abstract} +update() = 0 : void
__
}
class "CreateFieldState" as C_0003925512848679538817
class C_0003925512848679538817 {
+CreateFieldState(Player & player, AiPlayer & player2) : void
..
+changeState() : GameState
-drawField(sf::RenderWindow & window) : void
+handleInput(sf::Event & event) : void
+render(sf::RenderWindow & window) : void
+update() : void
__
-cell_size : sf::Vector2f
-draw_offset : sf::Vector2f
-field_height : int
-field_size_text : sf::Text
-field_width : int
-font : sf::Font
-next_state : GameState
-player : Player &
-player2 : AiPlayer &
}
class "InputBox" as C_0006905555226801011843
class C_0006905555226801011843 {
__
+box : sf::RectangleShape
+value : int
}
class "CreateShipState" as C_0016717855027770416060
class C_0016717855027770416060 {
+CreateShipState(Player & player, AiPlayer & player2) : void
..
+changeState() : GameState
-createShips() : void
+handleInput(sf::Event & event) : void
+render(sf::RenderWindow & window) : void
+update() : void
__
-active_box_index : int
-draw_offset : sf::Vector2f
-font : sf::Font
-input_boxes : InputBox[4]
-next_state : GameState
-number_ships_text : sf::Text
-player : Player &
-player2 : AiPlayer &
-ships_text : sf::Text
-title_text : sf::Text
}
class "MenuState" as C_0013166903766216927070
class C_0013166903766216927070 {
+MenuState() : void
..
+changeState() : GameState
+handleInput(sf::Event & event) : void
-moveDown() : void
-moveUp() : void
+render(sf::RenderWindow & window) : void
-selectItem() : void
+update() : void
__
-font : sf::Font
-menu_items : std::vector<sf::Text>
-next_state : GameState
-selected_item_index : size_t
}
class "PlacingShipsState" as C_0003009358475785535108
class C_0003009358475785535108 {
+PlacingShipsState(Player & player, AiPlayer & player2) : void
..
+changeState() : GameState
-drawField(sf::RenderWindow & window) : void
+handleInput(sf::Event & event) : void
-placeShipHelper() : void
+render(sf::RenderWindow & window) : void
+update() : void
__
-cell_size : sf::Vector2f
-current_ship_index : size_t
-current_x : size_t
-current_y : size_t
-draw_offset : sf::Vector2f
-font : sf::Font
-instruction_text : sf::Text
-next_state : GameState
-orientation : ShipOrientation
-player : Player &
-player2 : AiPlayer &
-result_text : sf::Text
-ship_representation : sf::RectangleShape
}
class "GameGui" as C_0007395642151187698177
class C_0007395642151187698177 {
+GameGui() : void
..
-changeState(GameState new_state) : void
+getCurrentState() const : GameState
+getPrevState() const : GameState
+mainLoop() : void
-pollEvents() : void
-render() : void
+run() : void
-update() : void
__
-ai_controller : AiPlayer
-current_state : GameState
-event : sf::Event
-player : Player
-player2 : Player
-prev_state : GameState
-state : std::unique_ptr<State>
-window : sf::RenderWindow
}
class "SaveLoadState" as C_0014140921539624914491
class C_0014140921539624914491 {
+SaveLoadState(GameGui & game_gui) : void
..
+changeState() : GameState
+handleInput(sf::Event & event) : void
-loadGameHelper() : void
+render(sf::RenderWindow & window) : void
-saveGameHelper() : void
+update() : void
__
-font : sf::Font
-game : GameGui &
-instruction_text : sf::Text
-next_state : GameState
-result_text : sf::Text
}
class "AttackingShipsState" as C_0009763532900440017346
class C_0009763532900440017346 {
+AttackingShipsState(Player & player, AiPlayer & player2) : void
..
+changeState() : GameState
-drawField(sf::RenderWindow & window, Player & player, sf::Vector2f draw_offset, bool show_ships = false) : void
+handleInput(sf::Event & event) : void
-onAbilityUse() : void
-onAttackUse() : void
+render(sf::RenderWindow & window) : void
+update() : void
__
-ai_player : AiPlayer &
-cell_size : sf::Vector2f
-current_x : size_t
-current_y : size_t
-draw_offset : sf::Vector2f
-draw_offset2 : sf::Vector2f
-font : sf::Font
-instruction_text : sf::Text
-next_state : GameState
-player : Player &
-result_text : sf::Text
-selection_box : sf::RectangleShape
}
class "exceptions::GameException" as C_0007589199267016446353
class C_0007589199267016446353 {
+GameException(const std::string & message) : void
..
+what() const noexcept : const char *
__
-msg : std::string
}
class "exceptions::NoAbilityAvailableException" as C_0006087931829388500955
class C_0006087931829388500955 {
+NoAbilityAvailableException() : void
+NoAbilityAvailableException(const std::string & message) : void
__
}
class "exceptions::ShipPlacementConflictException" as C_0014145847858458416793
class C_0014145847858458416793 {
+ShipPlacementConflictException() : void
+ShipPlacementConflictException(const std::string & message) : void
__
}
class "exceptions::OutOfBoundsAttackException" as C_0000456049838779900119
class C_0000456049838779900119 {
+OutOfBoundsAttackException() : void
+OutOfBoundsAttackException(const std::string & message) : void
__
}
C_0010668212532447068380 ..> C_0014529657433315016423
C_0012342435662910727844 ..> C_0017635961848386255115
C_0008193623610420284737 ..> C_0012342435662910727844
C_0014703876471129105020 ..> C_0012342435662910727844
C_0010378818160678026980 ..> C_0014703876471129105020
C_0003593355595461115184 ..> C_0001914138303902600425
C_0014529657433315016423 ..> C_0014256742677139282670
C_0014529657433315016423 --> C_0000674658759292391449 : -segments
C_0000674658759292391449 --+ C_0014529657433315016423
C_0000674658759292391449 o-- C_0014256742677139282670 : +state
C_0017499122254539489506 ..> C_0014529657433315016423
C_0017499122254539489506 o-- C_0010668212532447068380 : -ships
C_0003843296779074973901 ..> C_0002579181642537833876
C_0003843296779074973901 ..> C_0003333043679234439357
C_0003843296779074973901 ..> C_0014256742677139282670
C_0003843296779074973901 ..> C_0014529657433315016423
C_0003843296779074973901 ..> C_0006524010458157121833
C_0003843296779074973901 ..> C_0005505409806480479128
C_0003843296779074973901 ..> C_0017499122254539489506
C_0003843296779074973901 --> C_0000316359785794417378 : -field
C_0000316359785794417378 --+ C_0003843296779074973901
C_0000316359785794417378 o-- C_0003333043679234439357 : +state
C_0000316359785794417378 --> C_0014529657433315016423 : +ship
C_0006255146489372148425 --> C_0003843296779074973901 : +target_field
C_0006255146489372148425 --> C_0017499122254539489506 : +target_manager
C_0017635961848386255115 ..> C_0006255146489372148425
C_0017635961848386255115 ..> C_0005219465313958275113
C_0017635961848386255115 ..> C_0006740456236575953687
C_0002235219345516323367 ..> C_0012342435662910727844
C_0002235219345516323367 ..> C_0017635961848386255115
C_0002235219345516323367 ..> C_0006255146489372148425
C_0002235219345516323367 ..> C_0005219465313958275113
C_0002235219345516323367 ..> C_0006740456236575953687
C_0002235219345516323367 o-- C_0008193623610420284737 : -abilities
C_0002235219345516323367 o-- C_0010378818160678026980 : -ability_factory
C_0003605716991605700936 ..> C_0014529657433315016423
C_0003605716991605700936 ..> C_0002579181642537833876
C_0003605716991605700936 ..> C_0006740456236575953687
C_0003605716991605700936 o-- C_0017499122254539489506 : -ship_manager
C_0003605716991605700936 o-- C_0003843296779074973901 : -field
C_0003605716991605700936 o-- C_0002235219345516323367 : -ability_manager
C_0003605716991605700936 o-- C_0005219465313958275113 : -ability_results
C_0005644868336032600742 --> C_0003605716991605700936 : -controlled_player
C_0001914138303902600425 ..> C_0004356735495323104445
C_0003925512848679538817 o-- C_0004356735495323104445 : -next_state
C_0003925512848679538817 --> C_0003605716991605700936 : -player
C_0003925512848679538817 --> C_0005644868336032600742 : -player2
C_0003925512848679538817 o-- C_0009693095778494330448 : -draw_offset
C_0003925512848679538817 o-- C_0009693095778494330448 : -cell_size
C_0001914138303902600425 <|-- C_0003925512848679538817

C_0016717855027770416060 o-- C_0004356735495323104445 : -next_state
C_0016717855027770416060 --> C_0003605716991605700936 : -player
C_0016717855027770416060 --> C_0005644868336032600742 : -player2
C_0016717855027770416060 o-- "4" C_0006905555226801011843 : -input_boxes
C_0016717855027770416060 o-- C_0009693095778494330448 : -draw_offset
C_0001914138303902600425 <|-- C_0016717855027770416060

C_0013166903766216927070 o-- C_0004356735495323104445 : -next_state
C_0013166903766216927070 o-- C_0015054090575003110977 : -menu_items
C_0001914138303902600425 <|-- C_0013166903766216927070

C_0003009358475785535108 o-- C_0004356735495323104445 : -next_state
C_0003009358475785535108 o-- C_0002579181642537833876 : -orientation
C_0003009358475785535108 --> C_0003605716991605700936 : -player
C_0003009358475785535108 --> C_0005644868336032600742 : -player2
C_0003009358475785535108 o-- C_0009693095778494330448 : -draw_offset
C_0003009358475785535108 o-- C_0009693095778494330448 : -cell_size
C_0001914138303902600425 <|-- C_0003009358475785535108

C_0007395642151187698177 o-- C_0003605716991605700936 : -player
C_0007395642151187698177 o-- C_0003605716991605700936 : -player2
C_0007395642151187698177 o-- C_0005644868336032600742 : -ai_controller
C_0007395642151187698177 o-- C_0004356735495323104445 : -current_state
C_0007395642151187698177 o-- C_0004356735495323104445 : -prev_state
C_0007395642151187698177 o-- C_0003593355595461115184 : -state
C_0014140921539624914491 o-- C_0004356735495323104445 : -next_state
C_0014140921539624914491 --> C_0007395642151187698177 : -game
C_0001914138303902600425 <|-- C_0014140921539624914491

C_0009763532900440017346 o-- C_0004356735495323104445 : -next_state
C_0009763532900440017346 --> C_0003605716991605700936 : -player
C_0009763532900440017346 --> C_0005644868336032600742 : -ai_player
C_0009763532900440017346 o-- C_0009693095778494330448 : -draw_offset
C_0009763532900440017346 o-- C_0009693095778494330448 : -draw_offset2
C_0009763532900440017346 o-- C_0009693095778494330448 : -cell_size
C_0001914138303902600425 <|-- C_0009763532900440017346

C_0007589199267016446353 o-- C_0001275076681856179721 : -msg
C_0006087931829388500955 ..> C_0001275076681856179721
C_0007589199267016446353 <|-- C_0006087931829388500955

C_0014145847858458416793 ..> C_0001275076681856179721
C_0007589199267016446353 <|-- C_0014145847858458416793

C_0000456049838779900119 ..> C_0001275076681856179721
C_0007589199267016446353 <|-- C_0000456049838779900119


'Generated with clang-uml, version 0.5.5
'LLVM version clang version 18.1.8
@enduml
