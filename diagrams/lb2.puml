@startuml
class "std::vector<Ship>" as C_0010668212532447068380
class C_0010668212532447068380 {
__
}
class "std::unique_ptr<Ability>" as C_0002593715388203665760
class C_0002593715388203665760 {
__
}
class "std::queue<std::unique_ptr<Ability>>" as C_0006911030825501507270
class C_0006911030825501507270 {
__
}
class "std::string" as C_0001275076681856179721
class C_0001275076681856179721 {
__
}
class "AbilityResults" as C_0005219465313958275113
class C_0005219465313958275113 {
__
+BombardDamageDealt : bool
+DoubleDamageIsActive : bool
+ScannerShipFound : bool
}
enum "ShipSegmentState" as C_0014256742677139282670
enum C_0014256742677139282670 {
INTACT
DAMAGED
DESTROYED
}
enum "ShipOrientation" as C_0002579181642537833876
enum C_0002579181642537833876 {
HORIZONTAL
VERTICAL
}
enum "CellVisibilityState" as C_0003333043679234439357
enum C_0003333043679234439357 {
UNKNOWN
BLANK
SHIP
}
class "Ship" as C_0014529657433315016423
class C_0014529657433315016423 {
+Ship(int length) : void
+Ship(const Ship & other) : void
+Ship(Ship && other) noexcept : void
+~Ship() : void
..
+operator=(const Ship & other) : Ship &
+operator=(Ship && other) noexcept : Ship &
..
+getLength() const : size_t
+getSegmentHP(size_t index) const : int
+getSegmentState(size_t index) const : ShipSegmentState
+isAlive() const : bool
+takeDamage(size_t segment_index, int damage) : void
__
-health : size_t
-length : size_t
-segments : Segment *
}
class "Ship::Segment" as C_0000674658759292391449
class C_0000674658759292391449 {
__
+hp : int
+state : ShipSegmentState
}
class "ShipField" as C_0003843296779074973901
class C_0003843296779074973901 {
+ShipField() : void
+ShipField(int width, int height) : void
+ShipField(const ShipField & other) : void
+ShipField(ShipField && other) noexcept : void
+~ShipField() : void
..
+operator=(const ShipField & other) : ShipField &
+operator=(ShipField && other) noexcept : ShipField &
..
+attackShip(int x, int y, bool expose_cell = true, int damage = 1) : bool
+checkShipCollision(int ship_length, int x, int y, ShipOrientation orientation) const : bool
+clearField() : void
-exposeSurroundingShipCells(int ship_length, int x, int y) : void
+getCellVisibilityState(int x, int y) const : CellVisibilityState
+getHeight() const : size_t
+getIsShip(int x, int y) const : bool
+getShipSegmentState(int x, int y) const : ShipSegmentState
+getWidth() const : size_t
+placeShip(Ship & ship, int x, int y, ShipOrientation orientation) : void
__
-field : FieldElement **
-height : size_t
-width : size_t
}
class "ShipField::FieldElement" as C_0000316359785794417378
class C_0000316359785794417378 {
__
+ship : Ship *
+ship_segment_index : size_t
+state : CellVisibilityState
}
class "ShipManager" as C_0017499122254539489506
class C_0017499122254539489506 {
+ShipManager() : void
+ShipManager(size_t count, size_t * lengths) : void
+~ShipManager() = default : void
..
+getAliveCount() const : size_t
+getShip(size_t index) : Ship &
+getShipCount() const : size_t
+getShipLength(size_t index) const : size_t
__
-ships : std::vector<Ship>
-ships_count : size_t
}
enum "AbilityType" as C_0006740456236575953687
enum C_0006740456236575953687 {
DoubleDamage
Scanner
Bombard
}
abstract "Ability" as C_0017635961848386255115
abstract C_0017635961848386255115 {
+~Ability() = default : void
..
{abstract} +getType() = 0 : AbilityType
{abstract} +use(ShipField & field, ShipManager & manager, int x, int y, AbilityResults & ret) = 0 : void
__
}
class "AbilityManager" as C_0002235219345516323367
class C_0002235219345516323367 {
+AbilityManager() : void
..
+addRandomAbility() : void
+empty() const : bool
+getPendingAbilityType() const : AbilityType
-getRandomAbility() : std::unique_ptr<Ability>
+useAbility(ShipField & field, ShipManager & manager, int x, int y, AbilityResults & ability_results) : void
__
-abilities : std::queue<std::unique_ptr<Ability>>
}
class "BombardAbility" as C_0012849869308180511032
class C_0012849869308180511032 {
+getType() : AbilityType
+use(ShipField & field, ShipManager & manager, int x, int y, AbilityResults & ret) : void
__
}
class "DoubleDamageAbility" as C_0002469271380474702704
class C_0002469271380474702704 {
+getType() : AbilityType
+use(ShipField & field, ShipManager & manager, int x, int y, AbilityResults & ret) : void
__
}
class "ScannerAbility" as C_0005147631956111864072
class C_0005147631956111864072 {
+getType() : AbilityType
+use(ShipField & field, ShipManager & manager, int x, int y, AbilityResults & ret) : void
__
}
class "exceptions::BaseException" as C_0010866204493294675298
class C_0010866204493294675298 {
+BaseException(const std::string & message) : void
+BaseException(const char * message) : void
..
+what() const noexcept : const char *
__
#message : std::string
}
class "exceptions::NoAbilitiesException" as C_0014872412191399316063
class C_0014872412191399316063 {
+NoAbilitiesException() : void
+NoAbilitiesException(const std::string & message) : void
+NoAbilitiesException(const char * message) : void
__
}
class "exceptions::PlaceShipOutOfBoundsException" as C_0009044063635314502983
class C_0009044063635314502983 {
+PlaceShipOutOfBoundsException() : void
+PlaceShipOutOfBoundsException(const std::string & message) : void
+PlaceShipOutOfBoundsException(const char * message) : void
__
}
class "exceptions::ShipCollisionException" as C_0005819130468169833287
class C_0005819130468169833287 {
+ShipCollisionException() : void
+ShipCollisionException(const std::string & message) : void
+ShipCollisionException(const char * message) : void
__
}
C_0010668212532447068380 ..> C_0014529657433315016423
C_0002593715388203665760 ..> C_0017635961848386255115
C_0006911030825501507270 ..> C_0002593715388203665760
C_0014529657433315016423 ..> C_0014256742677139282670
C_0014529657433315016423 --> C_0000674658759292391449 : -segments
C_0000674658759292391449 --+ C_0014529657433315016423
C_0000674658759292391449 o-- C_0014256742677139282670 : +state
C_0003843296779074973901 ..> C_0002579181642537833876
C_0003843296779074973901 ..> C_0003333043679234439357
C_0003843296779074973901 ..> C_0014256742677139282670
C_0003843296779074973901 ..> C_0014529657433315016423
C_0003843296779074973901 --> C_0000316359785794417378 : -field
C_0000316359785794417378 --+ C_0003843296779074973901
C_0000316359785794417378 o-- C_0003333043679234439357 : +state
C_0000316359785794417378 --> C_0014529657433315016423 : +ship
C_0017499122254539489506 ..> C_0014529657433315016423
C_0017499122254539489506 o-- C_0010668212532447068380 : -ships
C_0017635961848386255115 ..> C_0003843296779074973901
C_0017635961848386255115 ..> C_0017499122254539489506
C_0017635961848386255115 ..> C_0005219465313958275113
C_0017635961848386255115 ..> C_0006740456236575953687
C_0002235219345516323367 ..> C_0002593715388203665760
C_0002235219345516323367 ..> C_0017635961848386255115
C_0002235219345516323367 ..> C_0003843296779074973901
C_0002235219345516323367 ..> C_0017499122254539489506
C_0002235219345516323367 ..> C_0005219465313958275113
C_0002235219345516323367 ..> C_0006740456236575953687
C_0002235219345516323367 o-- C_0006911030825501507270 : -abilities
C_0012849869308180511032 ..> C_0003843296779074973901
C_0012849869308180511032 ..> C_0017499122254539489506
C_0012849869308180511032 ..> C_0005219465313958275113
C_0012849869308180511032 ..> C_0006740456236575953687
C_0017635961848386255115 <|-- C_0012849869308180511032

C_0002469271380474702704 ..> C_0003843296779074973901
C_0002469271380474702704 ..> C_0017499122254539489506
C_0002469271380474702704 ..> C_0005219465313958275113
C_0002469271380474702704 ..> C_0006740456236575953687
C_0017635961848386255115 <|-- C_0002469271380474702704

C_0005147631956111864072 ..> C_0003843296779074973901
C_0005147631956111864072 ..> C_0017499122254539489506
C_0005147631956111864072 ..> C_0005219465313958275113
C_0005147631956111864072 ..> C_0006740456236575953687
C_0017635961848386255115 <|-- C_0005147631956111864072

C_0010866204493294675298 o-- C_0001275076681856179721 : #message
C_0014872412191399316063 ..> C_0001275076681856179721
C_0010866204493294675298 <|-- C_0014872412191399316063

C_0009044063635314502983 ..> C_0001275076681856179721
C_0010866204493294675298 <|-- C_0009044063635314502983

C_0005819130468169833287 ..> C_0001275076681856179721
C_0010866204493294675298 <|-- C_0005819130468169833287


'Generated with clang-uml, version 0.5.5
'LLVM version clang version 18.1.8
@enduml
